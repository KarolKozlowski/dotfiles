#!/bin/bash
# .bashrc
# Karol Kozlowski

# colors
rblk="\001\e[0;30m\002" # Black
rred="\001\e[0;31m\002" # Regular Red
rgrn="\001\e[0;32m\002" # Regular Green
rylw="\001\e[0;33m\002" # Regular Yellow
rblu="\001\e[0;34m\002" # Regular Blue
rpur="\001\e[0;35m\002" # Regular Purple
rcyn="\001\e[0;36m\002" # Regular Cyan
rwht="\001\e[0;37m\002" # Regular White
gray="\001\e[1;30m\002" # Gray
lred="\001\e[1;31m\002" # Light Red
lgrn="\001\e[1;32m\002" # Light Green
lylw="\001\e[1;33m\002" # Light Yellow
lblu="\001\e[1;34m\002" # Light Blue
lpur="\001\e[1;35m\002" # Light Purple
lcyn="\001\e[1;36m\002" # Light Cyan
lwht="\001\e[1;37m\002" # Light White
rst="\001\e[m\002"     # Text Reset

#lf='\e[0;10m'   # Line Feed
#lf=' \n'   # Line Feed
lf=' '


# Public proxy
[ -r ~/.bashrc-secrets ] && source ~/.bashrc-secrets

# local overrides
[ -r ~/.bashrc-local ] && source ~/.bashrc-local

# OS dependant variables
host_color=${rred}
user_color=${lblu}

major_release() {
    if [ -f /etc/redhat-release ]; then
        sed 's/.*\([0-9]\)\.[0-9].*/\1/' /etc/redhat-release
    else
        echo -n 0
    fi
}

case `uname` in
    'Linux')
        LS_OPTIONS="--color"
        host_color=${rgrn}
        [ $EUID -eq 0 ] && user_color=${rred}
        # only on Linux
        alias pys="echo 'http://'`hostname -f`':8000'; python -m SimpleHTTPServer 8000"
        case $(major_release) in
            '6')
                # Enable git from RHSCL if available
                [ -d /opt/rh/rh-git29 ] && source scl_source enable rh-git29
                ;;
            '7')
                ;;
        esac

        ;;
    'SunOS')
        LS_OPTIONS=""
        host_color=${lylw}
        export TERM=xterm
        [ $EUID -eq 0 ] && user_color=${rred}
        bind -f ~/.inputrc-sol
        ;;
    *)
        echo 'What am I?'
        ;;
esac

export LS_OPTIONS

# set username color in prompt (red if root)

case $(hostname | cut -d"." -f1) in
    'localhost')
        host_alias="\h(local)"
    ;;
    *)
        host_alias="\h"
    ;;
esac

# Enable bash completion RHEL 6
[ -e /etc/bash_completion ] && . /etc/bash_completion
# Enable bash completion RHEL 7
[ -e /usr/share/bash-completion/bash_completion ] && . /usr/share/bash-completion/bash_completion
# setup ussers hosts file for tab-completion
[ -e ~/.ssh/hosts ] && export HOSTFILE=~/.ssh/hosts
# https://asdf-vm.com/guide/getting-started.html#_3-install-asdf
[ -e $HOME/.asdf/asdf.sh ] && . $HOME/.asdf/asdf.sh
[ -e $HOME/.asdf/completions/asdf.bash ] && . $HOME/.asdf/completions/asdf.bash

# set proper timezone
export TZ='Europe/Warsaw'

# Aliases for commonly used cmds
alias ls="ls $LS_OPTIONS"
alias ll="ls $LS_OPTIONS -l"
alias l="ls $LS_OPTIONS -lA"
alias pr='http_proxy=$proxy https_proxy=$proxy'
alias rmb='find -name "*~" -print -delete'
#alias pip="https_proxy=$proxy; pip --proxy=$http_proxy"

# CDPATH
CDPATH=.
CDPATH=$CDPATH:$HOME
CDPATH=$CDPATH:$HOME/wa
[ -d /var/lib/jenkins ] && CDPATH=$CDPATH:/var/lib/jenkins
[ -d /mnt/c/Users/karol ] && CDPATH=${CDPATH}:/mnt/c/Users/karol

export CDPATH

# less config
export LESS="--quit-if-one-screen --quit-at-eof --RAW-CONTROL-CHARS --no-init"

# tell gpg where to ask for pass
export GPG_TTY=$(tty)

# the one and only
export EDITOR=/usr/bin/vim

# ~/bin
PATH=$HOME/bin:$PATH
# local python
PATH=$HOME/.local/bin:$PATH
# npm
PATH=$HOME/.npm-global/bin:$PATH
# go path
PATH=$HOME/go/bin:$PATH
# Add current dir to PATH
PATH=.:$PATH

md() {
    mkdir ${1}
    cd ${1}
}

exitstatus() {
    if [ $? == 0 ]; then
        echo -ne ""
    else
        echo -ne "${rred}"
    fi
}

scm() {
    info=""

    if [ -d $(git rev-parse --git-dir 2>/dev/null) ]; then
        if git config --local --get remote.origin.url >/dev/null 2>/dev/null; then
            # GIT
            git_color="${lcyn}"
            branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)
        elif git config --local --get svn-remote.svn.url >/dev/null 2>/dev/null; then
            # GIT-SVN
            git_color="${lpur}"
            branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)
        fi
    fi

    if [ -n "$branch" ]; then
        info=" ${info}[${git_color}${branch}${rst}]${rst}"
    else
        info=" "
    fi

    echo -ne "$info"
}

# run powerline only on non-ssh shells
if [ "$SSH_CONNECTION" == "" ]; then
    if [ -e /usr/share/powerline/bindings/bash/powerline.sh ]; then
        # powerline
        powerline-daemon -q
        POWERLINE_BASH_CONTINUATION=1
        POWERLINE_BASH_SELECT=1
        . /usr/share/powerline/bindings/bash/powerline.sh
    fi
fi

# enable 256 colors in terminal
#export TERM=xterm-256color

PS1="${user_color}\\u${rst}@${host_color}${host_alias}${rst} \$(exitstatus)\w${rst}\$(scm)\\$ "
PS2="${lylw}> ${rst}"

